version: '3.8'

services:
  food-portfolio-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: food-portfolio-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FRONTEND_URL=http://localhost:5000
    volumes:
      - app_logs:/app/logs
    networks:
      - food-portfolio-network
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = {hostname: 'localhost', port: 5000, path: '/api/health', timeout: 2000}; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.on('timeout', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy for production (optional)
  nginx:
    image: nginx:alpine
    container_name: food-portfolio-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - food-portfolio-app
    networks:
      - food-portfolio-network
    profiles:
      - production

volumes:
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  food-portfolio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16